---
import { getCollection } from "astro:content";
import Image from '../../components/Image.astro';
import Logo from '../../assets/img/risevista-logo.webp';  
import Layout from '../../layouts/Layout.astro';

// 物件コレクションを取得
const properties = await getCollection("properties");
// 日付で降順ソート（新しい順）
const sortedProperties = properties
  .filter((property) => !property.data.draft) // 下書きを除外
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
---

<Layout title="取り扱い物件 - 株式会社RISE VISTA">
  <div class="min-h-screen bg-primary-back">
    <!-- Hero Section -->
    <section class="relative bg-primary-back pt-48 pb-16">
      <div class="max-w-6xl mx-auto px-4">
        <div class="text-center">
          <div class="flex items-center justify-center mb-4">
            <p class="text-sm md:text-base tracking-wider font-tsukushi text-secondary">取り扱い物件</p>
          </div>
          <h1 class="text-4xl md:text-6xl font-bold tracking-widest font-tsukushi text-secondary mb-8">
            PROPERTIES
          </h1>
          <p class="text-lg text-primary font-tsukushi max-w-2xl mx-auto">
            お客様に最適な物件をご提案いたします。豊富な実績と信頼のネットワークで、理想の住まいを見つけましょう。
          </p>
        </div>
      </div>
    </section>

    <!-- Properties Grid -->
    <section class="py-8 bg-primary-back grid-lines">
      <div class="max-w-6xl mx-auto px-4">
        {sortedProperties.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {sortedProperties.map((property, index) => {
              const d = new Date(property.data.date);
              const year = d.getFullYear();
              const month = d.getMonth() + 1;
              const day = d.getDate();
              const formatted = `${year}年${month}月${day}日`;
              
              return (
                <article class="card relative bg-gray-500 overflow-hidden max-w-[582px] fade-in-text" style={`--delay: ${0.2 + index * 0.1}s`}>
                  <!-- 画像 -->
                  <a href={`/properties/${property.slug}`} aria-label={property.data.title}>
                    <img
                      src={property.data.thumbnail ?? "/uploads/placeholder.jpg"}
                      alt={property.data.title}
                      class="w-full h-[260px] md:h-[300px] object-cover transition-transform duration-500 hover:scale-105"
                      loading="lazy"
                    />
                  </a>

                  <!-- 本文ボックス -->
                  <div class="px-6 py-6 flex gap-6 items-start bg-gray-200">
                    <!-- Logo -->
                    <div class="flex-shrink-0">
                      <Image src={Logo} alt="RISE VISTA" class="w-6 h-6 object-cover absolute left-2" loading="lazy" />
                    </div>  
                    <!-- タイトル＆日付 -->
                    <div class="min-w-0">
                      <time class="block text-sm text-secondary mb-2">{formatted}</time>
                      <h3 class="leading-snug text-secondary font-semibold line-clamp-2">{property.data.title}</h3>

                      {property.data.externalLink && (
                        <div class="pt-3">
                          <a href={property.data.externalLink} target="_blank" rel="noopener noreferrer" class="text-[12px] text-sm underline text-primary-back">詳細を見る</a>
                        </div>
                      )}
                    </div>
                  </div>
                </article>
              );
            })}
          </div>
        ) : (
          <div class="text-center py-16">
            <p class="text-primary font-tsukushi text-lg">現在、取り扱い物件はありません。</p>
            <p class="text-primary font-tsukushi text-sm mt-2">新しい物件が追加され次第、こちらに表示されます。</p>
          </div>
        )}
      </div>
    </section>
  </div>
</Layout>

<style>
/* Grid lines for properties section */
.grid-lines {
  background-image: repeating-linear-gradient(
    to right,
    rgba(241, 236, 222, 0.10) 0px,
    rgba(241, 236, 222, 0.10) 1px,
    transparent 1px,
    transparent 120px
  );
  background-attachment: fixed;
}

/* Fade in text animation */
.fade-in-text {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  transition-delay: var(--delay, 0s);
  display: inline-block;
}

.fade-in-text.visible {
  opacity: 1;
  transform: translateY(0);
}

.black-bar {
  width: 5vw;
  min-width: 40px;
  height: 1px;
  background: #F1ECDE;
  display: block;
  border-radius: 1px;
}

/* Line clamp utilities */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Card styling to match PropertySlideCard */
.card { 
  background: #fff; 
  text-align: left; 
}
@media (max-width: 768px) {
  .card { width: 290px; }
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    document.querySelectorAll('.fade-in-text').forEach((el) => {
      observer.observe(el);
    });
  });
</script>

