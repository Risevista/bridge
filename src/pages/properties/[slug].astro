---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from "astro:content";
import { Image as AImage } from "astro:assets";

export async function getStaticPaths() {
  const properties = await getCollection("properties");
  return properties.map((property) => ({
    params: { slug: property.slug },
    props: { property },
  }));
}

const { property } = Astro.props;
const { Content } = await property.render();
---

<Layout title={`${property.data.title} - 取り扱い物件 - 株式会社RISE VISTA`}>
  <div class="min-h-screen bg-primary-back">
    <!-- Hero Section -->
    <section class="relative bg-primary-back pt-20 pb-16">
      <div class="max-w-4xl mx-auto px-4">
        <!-- ブランドロゴ・ブランド名 -->
        {(property.data.brandLogo || property.data.brand) && (
          <div class="flex items-center mb-6">
            {property.data.brandLogo && (
              <img 
                src={property.data.brandLogo} 
                alt={property.data.brand || "ブランドロゴ"} 
                class="w-12 h-12 object-contain mr-4"
              />
            )}
            {property.data.brand && (
              <span class="text-sm tracking-wide font-tsukushi text-primary">
                {property.data.brand}
              </span>
            )}
          </div>
        )}

        <!-- タイトル -->
        <h1 class="text-3xl md:text-5xl font-bold tracking-widest font-tsukushi text-primary mb-6">
          {property.data.title}
        </h1>

        <!-- 日付 -->
        <p class="text-lg text-primary font-tsukushi mb-8">
          {new Date(property.data.date).toLocaleDateString('ja-JP', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </p>

        <!-- サムネイル画像 -->
        <div class="mb-8">
          <img 
            src={property.data.thumbnail} 
            alt={property.data.title}
            class="w-full h-64 md:h-96 object-cover rounded-lg shadow-lg"
            loading="eager"
            decoding="async"
          />
        </div>

        <!-- 外部リンク -->
        {property.data.externalLink && (
          <div class="mb-8">
            <a 
              href={property.data.externalLink} 
              target="_blank" 
              rel="noopener noreferrer"
              class="inline-flex items-center px-6 py-3 bg-teal-600 text-white font-tsukushi rounded-lg hover:bg-teal-700 transition-colors duration-300"
            >
              詳細情報を見る
              <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
            </a>
          </div>
        )}
      </div>
    </section>

    <!-- Content Section -->
    {property.data.body && (
      <section class="py-16 bg-primary-back grid-lines">
        <div class="max-w-4xl mx-auto px-4">
          <div class="bg-white rounded-lg shadow-lg p-8">
            <div class="prose prose-lg max-w-none font-tsukushi text-primary">
              <Content />
            </div>
          </div>
        </div>
      </section>
    )}

    <!-- Back to Properties -->
    <section class="py-8 bg-primary-back">
      <div class="max-w-4xl mx-auto px-4 text-center">
        <a 
          href="/properties" 
          class="inline-flex items-center px-6 py-3 bg-primary text-white font-tsukushi rounded-lg hover:bg-primary/90 transition-colors duration-300"
        >
          ← 物件一覧に戻る
        </a>
      </div>
    </section>
  </div>
</Layout>

<style>
/* Grid lines for content section */
.grid-lines {
  background-image: repeating-linear-gradient(
    to right,
    rgba(241, 236, 222, 0.10) 0px,
    rgba(241, 236, 222, 0.10) 1px,
    transparent 1px,
    transparent 120px
  );
  background-attachment: fixed;
}

/* Prose styling for markdown content */
.prose {
  color: #374151;
}

.prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
  color: #1f2937;
  font-family: 'Tsukushi A Round Gothic', sans-serif;
}

.prose p {
  margin-bottom: 1rem;
  line-height: 1.7;
}

.prose ul, .prose ol {
  margin-bottom: 1rem;
  padding-left: 1.5rem;
}

.prose li {
  margin-bottom: 0.5rem;
}

.prose strong {
  font-weight: 600;
  color: #1f2937;
}

.prose a {
  color: #0d9488;
  text-decoration: underline;
}

.prose a:hover {
  color: #0f766e;
}
</style>

